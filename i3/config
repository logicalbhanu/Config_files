# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

#################### Note #########################
####################      #########################

# i3 uses the 'sh' shell and not the 'bash' shell when it starts
# so always define environment variables in '/etc/environment' file
# and so does PATH environment variable in it too, otherwise 
# we won't get those variables with command run from the i3-config 
# file and any command written here uses 'sh' shell only
#
# lf file manager script has the same problem therefore all its 
# environment variable are stored in /etc/environment file to make 
# it work.
#
# default browser is also declared in the same file too.

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!


#########################################
###         KEY DEFINITIONS          ####
#########################################
##    In Config = In Keyboard          ##
##         $Mod = Super key or Mod4    ##
##         Mod1 = ALT key              ##
##      Control = CTRL key             ##
##        Shift = SHIFT key            ##
##       Escape = ESCAPE key           ##
##       Return = ENTER or RETURN key  ##
##        Pause = PAUSE key            ##
##        Print = PRINT key            ##
##          Tab = TAB key              ##
#########################################

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Ubuntu Regular 14 

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec_always --no-startup-id nm-applet

#get auth work with polkit-gnome
exec --no-startup-id /usr/lib/xfce-polkit/xfce-polkit

exec --no-startup-id /usr/bin/dunst

#to control the resolution in i3(only in i3 and not in the other applications in it, i am using it after an bug in xorg-server, keeping this line till it get fixed. 
# which makes status bar and other i3 things very zoomed in
#exec xrandr --dpi 110

# Use pactl to adjust volume in PulseAudio.

# these 3 are from the link "https://unix.stackexchange.com/questions/439486/how-can-i-make-media-keys-work-with-i3"
#bindsym XF86AudioMute exec amixer sset 'Master' toggle
#bindsym XF86AudioLowerVolume exec amixer sset 'Master' 5%-
#bindsym XF86AudioRaiseVolume exec amixer sset 'Master' 5%+

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Media player key bindings (need media-sound/playerctl for playerctl.)
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# the above has been copid from "gitlab.com/eflinux/i3" and for that playerctl needs to be installed "sudo pacman -S playerctl"


# keybinding for controlling screen brightness
bindsym XF86MonBrightnessUp exec brightnessctl -d "intel_backlight" set +5% # increase screen brightness
bindsym XF86MonBrightnessDown exec brightnessctl -d "intel_backlight" set 5%- # decrease screen brightness
 

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty 

# kill focused window
#bindsym $mod+Shift+q kill
bindsym Mod1+q kill


# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# shifting to rofi
bindsym Mod1+d exec "rofi -show run"

# change focus
bindsym Mod1+h focus left
bindsym Mod1+j focus down
bindsym Mod1+k focus up
bindsym Mod1+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym Mod1+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.

## the icons used below are copied from awesome font cheat sheet and awesome font is installed in system
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym Mod1+1 workspace number $ws1
bindsym Mod1+2 workspace number $ws2
bindsym Mod1+3 workspace number $ws3
bindsym Mod1+4 workspace number $ws4
bindsym Mod1+5 workspace number $ws5
bindsym Mod1+6 workspace number $ws6
bindsym Mod1+7 workspace number $ws7
bindsym Mod1+8 workspace number $ws8
bindsym Mod1+9 workspace number $ws9
bindsym Mod1+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Using with scratchpad
# Make the currently focused window a scratchpad
bindsym $mod+Shift+Tab move scratchpad

# Show the first scratchpad window
 bindsym Mod1+Tab exec /home/bhanu/bin/scratchpad_cycle
# script is in ~/bin folder
# bindsym Mod1+Tab [class="[^(dropdown)]"] scratchpad show 
# this above command is pulling al the scratchpad window which satisfies the criteria
# all at one time, therefore not using it right now.

# Show the sup-mail scratchpad window, if any.
bindsym $mod+z [title="^Sup ::"] scratchpad show

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart


# from here i3-gaps part

#smart_gaps on
hide_edge_borders smart 
# this will disable the borders when only one window is there on a workspace.
gaps inner 5
gaps outer 1

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)

bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}


# floating pop up automatically
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# some more keybindings for resizing window without activating resize mode
bindsym $mod+Mod1+Left resize shrink width 10 px or 10 ppt
bindsym $mod+Mod1Down resize grow height 10 px or 10 ppt
bindsym $mod+Mod1+Up resize shrink height 10 px or 10 ppt
bindsym $mod+Mod1+Right resize grow width 10 px or 10 ppt


# up to this point 13-gaps is there

# Borders around windows 
default_border pixel 3
default_floating_border pixel 3


# Window Colors (created by me)

## creating variables for colors

set $bgcolor    #00897b
set $ibgcolor   #363636FF
set $textcolor  #ffffff
set $itextcolor #969696
set $ubgcolor   #ff0000

# note that the above variables are created by me and any name can be given to them, and here bg=background, ibg=inactive background, ubg=urgent background color, respectively

#                       border          background      text            indicator
## note that these are just labels to provide better readibility and indicator is the line which tells us where our new tile window is going to be created.

#client.focused          $bgcolor        $bgcolor        $textcolor      #00FA9A
#client.unfocused        $ibgcolor       $ibgcolor       $itextcolor     $ibgcolor
#client.focused_inactive $ibgcolor       $ibgcolor       $itextcolor     $ibgcolor
#client.urgent           $ubgcolor       $ubgcolor       $textcolor      #00FF7F

# the gruvbox theme
# class                 border  backgr. text    indicator child_border
client.focused          #83a598 #83a598 #ebdbb2 #00FA9A	  #83a598
client.focused_inactive #d5c4a1 #d5c4a1 #282828 #d5c4a1   #d5c4a1
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #00fa9a	  #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {  
       # status_command i3status -c /home/bhanu/.config/i3status/i3status.conf
        status_command i3blocks -c /home/bhanu/.config/i3blocks/i3blocks.conf

       #tray_output none
       # colors {
       #         background              $bgcolor
       #         separator               #282828
                #                       border          background      text
       #         focused_workspace       $bgcolor        $bgcolor        $textcolor
       #         inactive_workspace      $ibgcolor       $ibgcolor       $itextcolor
       #         urgent_workspace        $ubgcolor       $ubgcolor       $textcolor
       #         }
       colors {
        statusline		 #ffffff
        background 		 #403936
	focused_workspace 	 #34ad48  	#1bb76e		#e1f2e4
        inactive_workspace	 $ibgcolor	$ibgcolor	$itextcolor
    }


## note that i have inserted the '-c /home/bhanu/.config/i3status/i3status.conf' part to tell 'i3status' command to use the mentioned file as the conf file and not the default file which is present at /etc/i3status.conf

}

# Display Resolution
# note that exec_always is different from exec and command written with exec_always will get executed even if we reload the i3, where as the command with exec will only run when login to the i3
#exec_always xrandr --output Virtual-1 --mode 1440x900

## changing xrandr with arandr for multimonitor support is recommended, as it can be possible that each monitor will have different size and therefore we have to use more than one xrandr command for each display with its respective sizes but this can be done easily with arandr, details can be found of it on 8c video of errmano at 17.00 timestamp


# Display wallpaper(here by feh)

# --bg is for background and -fill is for filling up the background if the image is small and then we have the absolute path(relative can also be given) of the image which should be used as wallpaper.

exec_always feh --bg-fill /home/bhanu/Pictures/linux-retro.jpg

# Keybinding for i3lock(a lockscreen utility)
## first we will have to tell system that we want to create the key binding, we will use the above ways as mentioned by default in this config
bindsym $mod+x exec /home/bhanu/.config/scripts/lock

#keybinding for back and forth movement of workspace , grave means tile key
bindsym Mod1+grave workspace back_and_forth

# keybinding to move any window to back or forth workspace and then move to that workspace
bindsym $mod+Shift+grave move container to workspace back_and_forth; workspace back_and_forth

# keybinding for cycling open widows with rofi
bindsym $mod+Tab exec rofi -show window

# keybind for telegram-desktop
bindsym Mod1+t exec telegram-desktop

# keybinding to cycle previous and next workspace 
bindsym $mod+o workspace next
bindsym $mod+i workspace prev

# key binding for starting brave browser
bindsym Mod1+c exec brave 

# key binding for starting firefox
bindsym Mod1+m exec firefox

# key binding for rofi beats radio station 
bindsym Mod1+b exec /home/bhanu/bin/rofi-beats

# key binding for touchpad toggle
bindsym Mod4+d exec /home/bhanu/bin/touchpad_toggle_script

# key binding for mouse scrolling with keyboard (currently not working)
# bindsym Escape+j exec "xdotool click 5" #some problem with escape is there
# bindsym Escape+k exec "xdotool click 4" #don't know what it is, now.

# key binding for starting thunar
bindsym Mod1+e exec /home/bhanu/bin/thunar_script # script is at ./bin folder 

for_window [class=dropdown] mark dropdown_instance, move scratchpad; [con_mark=dropdown_instance] scratchpad show  

#can't write this line in the script itself,as it is misbehaving also mark command is use to protect diminishing of thunar from scratchpad when new popup window originated from thunar
#  eg like when we press shift+delete

# Script for starting ranger in kitty terminal at start
bindsym Mod1+r exec /home/bhanu/bin/ranger_script.py

# Screenshots of selection
bindsym --release Ctrl+Print exec --no-startup-id scrot -s '%Y-%m-%d-%T_$wx$h.png' -e 'mv $f /home/bhanu/Pictures/screenshots/'

# Screenshots of fullscreen
bindsym Ctrl+Shift+Print exec --no-startup-id scrot '%Y-%m-%d-%T_$wx$h.png' -e 'mv $f /home/bhanu/Pictures/screenshots/'

# Clipboard Screenshots of selection
bindsym --release Print exec --no-startup-id scrot -s '/tmp/%F_%T_$wx$h.png' -e 'xclip -selection clipboard -target image/png -i $f && rm $f'

# Clipboard Screenshots of fullscreen
bindsym Shift+Print exec --no-startup-id scrot '/tmp/%F_%T_$wx$h.png' -e 'xclip -selection clipboard -target image/png -i $f && rm $f'

# assign programs to workspaces
for_window [class="Gnome-terminal"] move to workspace $ws1

#for_window [class="Brave-browser"] move to workspace $ws2

for_window [class="Sublime_text"] move to workspace $ws3

for_window [class="libreoffice-writer"] move to workspace $ws3

for_window [class="Blueberry.py" instance="blueberry.py"] floating enable  # this will launch the application in floating mode always

for_window [class="Lxappearance" instance="lxappearance"] floating enable 

for_window [class="Mate-search-tool" instance="mate-search-tool"] floating enable resize set 640 480 

for_window [class="TelegramDesktop" instance="telegram-desktop"] floating enable resize set 800 550

## to see the class name type "xprop" command in terminal and then we will get a plus sign curson then click on the window of the program whose class name we want to know and then look into the terminal and see the line 'WM_CLASS(STRING) = "open program name", "open program class name"

# Window Compositor
exec_always picom --config /home/bhanu/.config/picom/picom.conf
# exec_always picom -i 1.0 --active-opacity 1.0 ## -f is for fading, -i is for opacity of un-focussed window ranges between 0 to 1, similarly --active-opacity is for opacity of focussed window , ranges between 0 to 1, 1 for making completely opaque.

## for virutal machine we have to comment one line in the compositor file at location "sudo vim /etc/xdg/picom.conf" and the line is "vsync = true".


# creating Log out, Reboot, Poweroff bindings

mode "(S)uspend, (L)ogout, (R)eboot, (P)oweroff" {
        bindsym r exec --no-startup-id systemctl reboot
        bindsym s exec --no-startup-id systemctl suspend; mode "default"
        bindsym l exit
        bindsym p exec --no-startup-id systemctl poweroff

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+Shift+e mode "(S)uspend, (L)ogout, (R)eboot, (P)oweroff"


## creating a mode to cycle each window of scratchpad without lossing focus in between

#mode "Cycle scratchpad" {     
#  bindsym $mod+Tab scratchpad show; scratchpad show     
#  bindsym Escape mode "default"  
#  bindsym $mod+F4 kill; scratchpad show; scratchpad show

# this will hide the scratchpad and escape from the cycle mode

#}

#bindsym $mod+Tab mode "Cycle scratchpad"; scratchpad show

### Adding some mouse stuffs
#enabling mouse tap  (see the link https://www.reddit.com/r/i3wm/comments/516e8c/tap_to_click_touchpad/  for knowing the device id and operation id of the touchpad)

exec xinput set-prop 10 312 1

#enabling natural scrolling of touchpad

exec xinput set-prop 10 320 1

## clear contents of undodir directory of vim at start
exec rm .nvim/undodir/*

## Starting guake terminal at start

exec_always guake --hide # the --hide option is to hide the popup guake terminal as after removing its icon from taskbar it is keep poping while starting/restarting the i3


# from here the settings are from the endeavour os i3 default config.
# set floating (nontiling)for apps needing it
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable

#set floating (nontiling) for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Pamac-manager"] floating enable
